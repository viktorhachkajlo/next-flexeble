"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RateLimiting = void 0;
var RateLimiting = /** @class */ (function () {
    function RateLimiting(rateLimitingParams) {
        this.rules = rateLimitingParams.rules;
    }
    RateLimiting.prototype.toString = function () {
        return "\nextend schema\n  @rateLimiting(rules: ".concat(renderRules(this.rules), "\n  )\n");
    };
    return RateLimiting;
}());
exports.RateLimiting = RateLimiting;
function renderRules(rules) {
    var renderedRules = rules.map(function (rule) {
        var name = "\n      name: \"".concat(rule.name, "\"");
        var limit = ",\n      limit: ".concat(rule.limit);
        var duration = ",\n      duration: ".concat(rule.duration);
        var condition = ",\n      condition:".concat(renderCondition(rule.condition));
        return "{".concat(name).concat(limit).concat(duration).concat(condition, "\n    }");
    });
    return "[".concat(renderedRules, "]");
}
function renderCondition(condition) {
    if (isHeaderCondition(condition)) {
        return renderHeaderCondition(condition);
    }
    if (isJwtCondition(condition)) {
        return renderJwtCondition(condition);
    }
    if (isIpCondition(condition)) {
        return renderIpCondition(condition);
    }
    if (isOperationCondition(condition)) {
        return renderOperationCondition(condition);
    }
    return '';
}
function isHeaderCondition(condition) {
    return condition.headers !== undefined;
}
function renderHeaderCondition(condition) {
    var headerConditions = condition.headers
        .map(function (headerCondition) {
        var value = '"*"';
        if (headerCondition.value !== '*') {
            value = "[".concat(headerCondition.value.map(function (value) { return "\"".concat(value, "\""); }).join(', '), "]");
        }
        return "{name: \"".concat(headerCondition.name, "\", value: ").concat(value, "}");
    })
        .join(',');
    return " {\n        headers: [".concat(headerConditions, "]\n      }");
}
function isJwtCondition(condition) {
    return condition.jwtClaims !== undefined;
}
function renderJwtCondition(condition) {
    var conditions = condition.jwtClaims
        .map(function (condition) {
        var value = '"*"';
        if (condition.value !== '*') {
            if (typeof condition.value === 'object') {
                value = "".concat(JSON.stringify(JSON.stringify(condition.value)));
            }
            else {
                value = "\"".concat(condition.value, "\"");
            }
        }
        return "{name: \"".concat(condition.name, "\", value: ").concat(value, "}");
    })
        .join(',');
    return " {\n        jwt_claims: [".concat(conditions, "]\n      }");
}
function isIpCondition(condition) {
    return condition.ips !== undefined;
}
function renderIpCondition(condition) {
    var rendered = '"*"';
    if (condition.ips !== '*') {
        rendered = "[".concat(condition.ips.map(function (ip) { return "\"".concat(ip, "\""); }).join(','), "]");
    }
    return " {\n        ips: ".concat(rendered, "\n      }");
}
function isOperationCondition(condition) {
    return condition.operations !== undefined;
}
function renderOperationCondition(condition) {
    var rendered = '"*"';
    if (condition.operations !== '*') {
        rendered = "[".concat(condition.operations.map(function (operation) { return "\"".concat(operation, "\""); }).join(','), "]");
    }
    return " {\n        operations: ".concat(rendered, "\n      }");
}
