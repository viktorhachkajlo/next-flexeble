"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GraphQLAPI = exports.PartialGraphQLAPI = void 0;
var header_1 = require("./header");
var PartialGraphQLAPI = /** @class */ (function () {
    function PartialGraphQLAPI(params) {
        var headers = new header_1.Headers();
        if (params.headers) {
            params.headers(headers);
        }
        this.apiUrl = params.url;
        this.headers = headers.headers;
        this.introspectionHeaders = headers.introspectionHeaders;
    }
    PartialGraphQLAPI.prototype.finalize = function (namespace) {
        return new GraphQLAPI(this.apiUrl, this.headers, this.introspectionHeaders, namespace);
    };
    return PartialGraphQLAPI;
}());
exports.PartialGraphQLAPI = PartialGraphQLAPI;
var GraphQLAPI = /** @class */ (function () {
    function GraphQLAPI(url, headers, introspectionHeaders, namespace) {
        this.namespace = namespace;
        this.url = url;
        this.headers = headers;
        this.introspectionHeaders = introspectionHeaders;
    }
    GraphQLAPI.prototype.toString = function () {
        var header = '  @graphql(\n';
        var namespace = this.namespace ? "    namespace: \"".concat(this.namespace, "\"\n") : '';
        var url = this.url ? "    url: \"".concat(this.url, "\"\n") : '';
        var headers = this.headers.map(function (header) { return "      ".concat(header); }).join('\n');
        headers = headers ? "    headers: [\n".concat(headers, "\n    ]\n") : '';
        var introspectionHeaders = this.introspectionHeaders
            .map(function (header) { return "      ".concat(header); })
            .join('\n');
        introspectionHeaders = introspectionHeaders
            ? "    introspectionHeaders: [\n".concat(introspectionHeaders, "\n    ]\n")
            : '';
        var footer = '  )';
        return "".concat(header).concat(namespace).concat(url).concat(headers).concat(introspectionHeaders).concat(footer);
    };
    return GraphQLAPI;
}());
exports.GraphQLAPI = GraphQLAPI;
