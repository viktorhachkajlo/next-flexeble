"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var index_1 = require("../../src/index");
var globals_1 = require("@jest/globals");
var utils_1 = require("../utils");
(0, globals_1.describe)('Default value generation', function () {
    (0, globals_1.it)('generates String default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.string().default('Bob')
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: String! @default(value: \"Bob\")\n      }\"\n    ");
    });
    (0, globals_1.it)('generates String default as optional', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.string().optional().default('Bob')
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: String @default(value: \"Bob\")\n      }\"\n    ");
    });
    (0, globals_1.it)('generates String list default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.string().list().default(['Bob'])
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: [String!]! @default(value: [\"Bob\"])\n      }\"\n    ");
    });
    (0, globals_1.it)('generates ID default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.id().default('asdf123')
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: ID! @default(value: \"asdf123\")\n      }\"\n    ");
    });
    (0, globals_1.it)('generates ID list default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.id().list().default(['asdf123', 'omg123'])
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: [ID!]! @default(value: [\"asdf123\", \"omg123\"])\n      }\"\n    ");
    });
    (0, globals_1.it)('generates PhoneNumber default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.phoneNumber().default('555 123 123')
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: PhoneNumber! @default(value: \"555 123 123\")\n      }\"\n    ");
    });
    (0, globals_1.it)('generates PhoneNumber list default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.phoneNumber().list().default(['555 123 123', '555 432 432'])
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: [PhoneNumber!]! @default(value: [\"555 123 123\", \"555 432 432\"])\n      }\"\n    ");
    });
    (0, globals_1.it)('generates IPAddress default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.ipAddress().default('0.0.0.0')
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: IPAddress! @default(value: \"0.0.0.0\")\n      }\"\n    ");
    });
    (0, globals_1.it)('generates IPAddress list default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.ipAddress().list().default(['0.0.0.0', '1.1.1.1'])
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: [IPAddress!]! @default(value: [\"0.0.0.0\", \"1.1.1.1\"])\n      }\"\n    ");
    });
    (0, globals_1.it)('generates Email default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.email().default('foo@bar.lol')
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: Email! @default(value: \"foo@bar.lol\")\n      }\"\n    ");
    });
    (0, globals_1.it)('generates Email list default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.email().list().default(['foo@bar.lol'])
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: [Email!]! @default(value: [\"foo@bar.lol\"])\n      }\"\n    ");
    });
    (0, globals_1.it)('generates URL default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.url().default('https://github.com')
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: URL! @default(value: \"https://github.com\")\n      }\"\n    ");
    });
    (0, globals_1.it)('generates URL list default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g
                .url()
                .list()
                .default(['https://github.com', 'https://codeberg.org'])
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: [URL!]! @default(value: [\"https://github.com\", \"https://codeberg.org\"])\n      }\"\n    ");
    });
    (0, globals_1.it)('generates Int default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.int().default(2)
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: Int! @default(value: 2)\n      }\"\n    ");
    });
    (0, globals_1.it)('generates Int list default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.int().list().default([2])
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: [Int!]! @default(value: [2])\n      }\"\n    ");
    });
    (0, globals_1.it)('generates Float default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.float().default(1.337)
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: Float! @default(value: 1.337)\n      }\"\n    ");
    });
    (0, globals_1.it)('generates Float list default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.float().list().default([1.337, 2.32])
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: [Float!]! @default(value: [1.337, 2.32])\n      }\"\n    ");
    });
    (0, globals_1.it)('generates Boolean default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.boolean().default(false)
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: Boolean! @default(value: false)\n      }\"\n    ");
    });
    (0, globals_1.it)('generates Boolean list default', function () {
        var model = index_1.g.model('User', {
            name: index_1.g.boolean().list().default([true, false])
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        name: [Boolean!]! @default(value: [true, false])\n      }\"\n    ");
    });
    (0, globals_1.it)('generates Date default', function () {
        var model = index_1.g.model('User', {
            date: index_1.g.date().default(new Date('1995-12-17'))
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        date: Date! @default(value: \"1995-12-17\")\n      }\"\n    ");
    });
    (0, globals_1.it)('generates Date list default', function () {
        var model = index_1.g.model('User', {
            date: index_1.g
                .date()
                .list()
                .default([new Date('1995-12-17'), new Date('2002-01-01')])
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        date: [Date!]! @default(value: [\"1995-12-17\", \"2002-01-01\"])\n      }\"\n    ");
    });
    (0, globals_1.it)('generates DateTime default', function () {
        var model = index_1.g.model('User', {
            date: index_1.g.datetime().default(new Date('1995-12-17T04:20:00Z'))
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        date: DateTime! @default(value: \"1995-12-17T04:20:00Z\")\n      }\"\n    ");
    });
    (0, globals_1.it)('generates DateTime list default', function () {
        var model = index_1.g.model('User', {
            date: index_1.g
                .datetime()
                .list()
                .default([
                new Date('1995-12-17T04:20:00Z'),
                new Date('2002-12-17T04:20:00Z')
            ])
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        date: [DateTime!]! @default(value: [\"1995-12-17T04:20:00Z\", \"2002-12-17T04:20:00Z\"])\n      }\"\n    ");
    });
    (0, globals_1.it)('generates Timestamp default', function () {
        var model = index_1.g.model('User', {
            date: index_1.g.timestamp().default(1683644443566)
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        date: Timestamp! @default(value: 1683644443566)\n      }\"\n    ");
    });
    (0, globals_1.it)('generates Timestamp list default', function () {
        var model = index_1.g.model('User', {
            date: index_1.g.timestamp().list().default([1683644443566, 1683644443569])
        });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)(model)).toMatchInlineSnapshot("\n      \"type User @model {\n        date: [Timestamp!]! @default(value: [1683644443566, 1683644443569])\n      }\"\n    ");
    });
});
