"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var index_1 = require("../../src/index");
var globals_1 = require("@jest/globals");
var utils_1 = require("../utils");
(0, globals_1.describe)('GraphQL connector', function () {
    (0, globals_1.beforeEach)(function () { return index_1.g.clear(); });
    (0, globals_1.it)('generates the minimum possible GraphQL datasource', function () {
        var contentful = index_1.connector.GraphQL({
            url: 'https://graphql.contentful.com/content/v1/spaces/{{ env.CONTENTFUL_SPACE_ID }}/environments/{{ env.CONTENTFUL_ENVIRONMENT }}'
        });
        index_1.g.datasource(contentful);
        (0, globals_1.expect)((0, utils_1.renderGraphQL)((0, index_1.config)({ schema: index_1.g }))).toMatchInlineSnapshot("\n      \"extend schema\n        @graphql(\n          url: \"https://graphql.contentful.com/content/v1/spaces/{{ env.CONTENTFUL_SPACE_ID }}/environments/{{ env.CONTENTFUL_ENVIRONMENT }}\"\n        )\"\n    ");
    });
    (0, globals_1.it)('generates the maximum possible GraphQL datasource', function () {
        var contentful = index_1.connector.GraphQL({
            url: 'https://graphql.contentful.com/content/v1/spaces/{{ env.CONTENTFUL_SPACE_ID }}/environments/{{ env.CONTENTFUL_ENVIRONMENT }}',
            headers: function (headers) {
                headers.static('Authorization', 'Bearer {{ env.STRIPE_API_KEY }}');
                headers.static('Method', 'POST');
                headers.introspection('Foo', 'BAR');
            }
        });
        index_1.g.datasource(contentful, { namespace: 'Contentful' });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)((0, index_1.config)({ schema: index_1.g }))).toMatchInlineSnapshot("\n      \"extend schema\n        @graphql(\n          namespace: \"Contentful\"\n          url: \"https://graphql.contentful.com/content/v1/spaces/{{ env.CONTENTFUL_SPACE_ID }}/environments/{{ env.CONTENTFUL_ENVIRONMENT }}\"\n          headers: [\n            { name: \"Authorization\", value: \"Bearer {{ env.STRIPE_API_KEY }}\" }\n            { name: \"Method\", value: \"POST\" }\n          ]\n          introspectionHeaders: [\n            { name: \"Foo\", value: \"BAR\" }\n          ]\n        )\"\n    ");
    });
    (0, globals_1.it)('combines multiple apis into one extension', function () {
        var contentful = index_1.connector.GraphQL({
            url: 'https://graphql.contentful.com/content/v1/spaces/{{ env.CONTENTFUL_SPACE_ID }}/environments/{{ env.CONTENTFUL_ENVIRONMENT }}'
        });
        var github = index_1.connector.GraphQL({
            url: 'https://api.github.com/graphql'
        });
        index_1.g.datasource(contentful, { namespace: 'Contentful' });
        index_1.g.datasource(github, { namespace: 'GitHub' });
        (0, globals_1.expect)((0, utils_1.renderGraphQL)((0, index_1.config)({ schema: index_1.g }))).toMatchInlineSnapshot("\n      \"extend schema\n        @graphql(\n          namespace: \"Contentful\"\n          url: \"https://graphql.contentful.com/content/v1/spaces/{{ env.CONTENTFUL_SPACE_ID }}/environments/{{ env.CONTENTFUL_ENVIRONMENT }}\"\n        )\n        @graphql(\n          namespace: \"GitHub\"\n          url: \"https://api.github.com/graphql\"\n        )\"\n    ");
    });
});
